digraph manager_compiler_graph {
RTMKernel[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="controller" ROWSPAN="1" COLSPAN="1">controller<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="p" ROWSPAN="1" COLSPAN="1">p<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="pp" ROWSPAN="1" COLSPAN="1">pp<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="dvv" ROWSPAN="1" COLSPAN="1">dvv<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="source_container" ROWSPAN="1" COLSPAN="1">source_container<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="px" ROWSPAN="1" COLSPAN="1">px<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="py" ROWSPAN="1" COLSPAN="1">py<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="scale" ROWSPAN="1" COLSPAN="1">scale<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Kernel : RTMKernel</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="ppresult" ROWSPAN="1" COLSPAN="1">ppresult<BR/>clk=STREAM<BR/>width=32<BR/>PUSH 5</TD></TR></TABLE></TD></TR></TABLE>>];
RTMKernel_assign -> ppresult_assign[color=green headport="assignment_32" tailport="assignment_64"];
RTMKernel_assign -> p_assign[color=green headport="assignment_35" tailport="assignment_64"];
RTMKernel_assign -> pp_assign[color=green headport="assignment_38" tailport="assignment_64"];
RTMKernel_assign -> dvv_assign[color=green headport="assignment_41" tailport="assignment_64"];
RTMKernel_assign -> source_container_assign[color=green headport="assignment_44" tailport="assignment_64"];
RTMKernel_assign -> px_assign[color=green headport="assignment_47" tailport="assignment_64"];
RTMKernel_assign -> py_assign[color=green headport="assignment_50" tailport="assignment_64"];
RTMKernel_assign -> scale_assign[color=green headport="assignment_53" tailport="assignment_64"];
RTMKernel_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_64" ROWSPAN="1" COLSPAN="1">25600 : width_in_controller=32 width_in_p=32 width_in_pp=32 width_in_dvv=32 width_in_source_container=32 width_in_px=32 width_in_py=32 width_in_scale=32 width_out_ppresult=32 clk=STREAM </TD></TR></TABLE>>];
RTMKernel_assign -> RTMKernel[color=gray];
cpu_to_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : cpu_to_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cpu_to_lmem" ROWSPAN="1" COLSPAN="1">cpu_to_lmem<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
cpu_to_lmem_assign -> write_lmem_assign[color=green headport="assignment_2" tailport="assignment_5"];
cpu_to_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_5" ROWSPAN="1" COLSPAN="1">12800 : width=128 clk=STREAM </TD></TR></TABLE>>];
cpu_to_lmem_assign -> cpu_to_lmem[color=gray];
lmem_to_cpu[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="lmem_to_cpu" ROWSPAN="1" COLSPAN="1">lmem_to_cpu<BR/>clk=STREAM<BR/>width=128<BR/>PUSH 64</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_To_Host_fwd : lmem_to_cpu</TD></TR></TABLE>>];
lmem_to_cpu_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_20" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
lmem_to_cpu_assign -> lmem_to_cpu[color=gray];
addrgen_cmd_write_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_write_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_write_lmem_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_write_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_write_lmem_assign -> cmd_write_lmem_0_assign[color=green headport="assignment_8" tailport="assignment_11"];
addrgen_cmd_write_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_11" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_write_lmem_assign -> addrgen_cmd_write_lmem[color=gray];
cmd_write_lmem_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_write_lmem_0" ROWSPAN="1" COLSPAN="1">cmd_write_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_write_lmem_0</TD></TR></TABLE>>];
cmd_write_lmem_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_8" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_write_lmem_0_assign -> cmd_write_lmem_0[color=gray];
write_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="write_lmem" ROWSPAN="1" COLSPAN="1">write_lmem<BR/>clk=STREAM<BR/>width=1536<BR/>PUSH 16</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">To_Memory : write_lmem</TD></TR></TABLE>>];
write_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_2" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
write_lmem_assign -> write_lmem[color=gray];
addrgen_cmd_read_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_read_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_read_lmem_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_read_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_read_lmem_assign -> cmd_read_lmem_0_assign[color=green headport="assignment_14" tailport="assignment_17"];
addrgen_cmd_read_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_17" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_read_lmem_assign -> addrgen_cmd_read_lmem[color=gray];
cmd_read_lmem_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_read_lmem_0" ROWSPAN="1" COLSPAN="1">cmd_read_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_read_lmem_0</TD></TR></TABLE>>];
cmd_read_lmem_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_14" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_read_lmem_0_assign -> cmd_read_lmem_0[color=gray];
read_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : read_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="read_lmem" ROWSPAN="1" COLSPAN="1">read_lmem<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
read_lmem_assign -> lmem_to_cpu_assign[color=green headport="assignment_20" tailport="assignment_23"];
read_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_23" ROWSPAN="1" COLSPAN="1">153600 : width=1536 clk=STREAM </TD></TR></TABLE>>];
read_lmem_assign -> read_lmem[color=gray];
addrgen_cmd_controller[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_controller</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_controller_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_controller_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_controller_assign -> cmd_controller_0_assign[color=green headport="assignment_26" tailport="assignment_29"];
addrgen_cmd_controller_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_29" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_controller_assign -> addrgen_cmd_controller[color=gray];
cmd_controller_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_controller_0" ROWSPAN="1" COLSPAN="1">cmd_controller_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_controller_0</TD></TR></TABLE>>];
cmd_controller_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_26" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_controller_0_assign -> cmd_controller_0[color=gray];
controller[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : controller</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="controller" ROWSPAN="1" COLSPAN="1">controller<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
controller_assign -> RTMKernel_assign[color=green headport="assignment_64" tailport="assignment_67"];
controller_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_67" ROWSPAN="1" COLSPAN="1">179200 : width=1536 clk=STREAM </TD></TR></TABLE>>];
controller_assign -> controller[color=gray];
dvv[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : dvv</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="dvv" ROWSPAN="1" COLSPAN="1">dvv<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
dvv_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_41" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
dvv_assign -> dvv[color=gray];
p[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : p</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="p" ROWSPAN="1" COLSPAN="1">p<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
p_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_35" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
p_assign -> p[color=gray];
pp[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : pp</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="pp" ROWSPAN="1" COLSPAN="1">pp<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
pp_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_38" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
pp_assign -> pp[color=gray];
px[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : px</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="px" ROWSPAN="1" COLSPAN="1">px<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
px_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_47" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
px_assign -> px[color=gray];
py[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : py</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="py" ROWSPAN="1" COLSPAN="1">py<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
py_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_50" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
py_assign -> py[color=gray];
scale[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : scale</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="scale" ROWSPAN="1" COLSPAN="1">scale<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
scale_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_53" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
scale_assign -> scale[color=gray];
source_container[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : source_container</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="source_container" ROWSPAN="1" COLSPAN="1">source_container<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
source_container_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_44" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
source_container_assign -> source_container[color=gray];
ppresult[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="ppresult" ROWSPAN="1" COLSPAN="1">ppresult<BR/>clk=STREAM<BR/>width=128<BR/>PUSH 64</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_To_Host_fwd : ppresult</TD></TR></TABLE>>];
ppresult_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_32" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
ppresult_assign -> ppresult[color=gray];
cpu_to_lmem -> write_lmem [headport="write_lmem" tailport="cpu_to_lmem" label="{D{data:1}}"]
addrgen_cmd_write_lmem -> cmd_write_lmem_0 [headport="cmd_write_lmem_0" tailport="addrgen_cmd_write_lmem_0" label="{D{data:1}}"]
addrgen_cmd_read_lmem -> cmd_read_lmem_0 [headport="cmd_read_lmem_0" tailport="addrgen_cmd_read_lmem_0" label="{D{data:1}}"]
read_lmem -> lmem_to_cpu [headport="lmem_to_cpu" tailport="read_lmem" label="{D{data:1}}"]
addrgen_cmd_controller -> cmd_controller_0 [headport="cmd_controller_0" tailport="addrgen_cmd_controller_0" label="{D{data:1}}"]
controller -> RTMKernel [headport="controller" tailport="controller" label="{D{data:1}}"]
dvv -> RTMKernel [headport="dvv" tailport="dvv" label="{D{data:1}}"]
p -> RTMKernel [headport="p" tailport="p" label="{D{data:1}}"]
pp -> RTMKernel [headport="pp" tailport="pp" label="{D{data:1}}"]
px -> RTMKernel [headport="px" tailport="px" label="{D{data:1}}"]
py -> RTMKernel [headport="py" tailport="py" label="{D{data:1}}"]
scale -> RTMKernel [headport="scale" tailport="scale" label="{D{data:1}}"]
source_container -> RTMKernel [headport="source_container" tailport="source_container" label="{D{data:1}}"]
RTMKernel -> ppresult [headport="ppresult" tailport="ppresult" label="{D{data:1}}"]
cmd_write_lmem_0 -> write_lmem [color=blue style=dotted]
cmd_read_lmem_0 -> read_lmem [color=blue style=dotted]
cmd_controller_0 -> controller [color=blue style=dotted]
}
