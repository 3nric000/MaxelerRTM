/**
 * Document: MaxCompiler Tutorial (maxcompiler-tutorial.pdf)
 * Chapter: 12      Example: 3      Name: Dualport mapped ROM
 * MaxFile name: DualPortMappedRom
 * Summary:
 *       Kernel design that demonstrates the use of a dual port mapped ROM.
 */

package dualportmappedrom;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.utils.MathUtils;

class DualPortMappedRomKernel extends Kernel {
	DualPortMappedRomKernel(KernelParameters parameters, int dataSize) {
		super(parameters);

		int addrBits = MathUtils.bitsToAddress(dataSize);

		// Input
		DFEVar addressA = io.input("addressA", dfeUInt(addrBits));
		DFEVar addressB = io.input("addressB", dfeUInt(addrBits));

		Memory<DFEVar> mappedRom = mem.alloc(dfeFloat(8,24), dataSize);
		mappedRom.mapToCPU("mappedRom");

		// Output
		DFEVar readA = mappedRom.read(addressA);
		DFEVar readB = mappedRom.read(addressB);

		io.output("outputA", readA, dfeFloat(8,24));
		io.output("outputB", readB, dfeFloat(8,24));
	}
}
