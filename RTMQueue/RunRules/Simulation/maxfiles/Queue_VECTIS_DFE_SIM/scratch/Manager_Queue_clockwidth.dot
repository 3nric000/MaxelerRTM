digraph manager_compiler_graph {
QueueKernel[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="controller" ROWSPAN="1" COLSPAN="1">controller<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="x" ROWSPAN="1" COLSPAN="1">x<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="y" ROWSPAN="1" COLSPAN="1">y<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Kernel : QueueKernel</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="s" ROWSPAN="1" COLSPAN="1">s<BR/>clk=STREAM<BR/>width=32<BR/>PUSH 5</TD></TR></TABLE></TD></TR></TABLE>>];
QueueKernel_assign -> s_assign[color=green headport="assignment_26" tailport="assignment_38"];
QueueKernel_assign -> x_assign[color=green headport="assignment_29" tailport="assignment_38"];
QueueKernel_assign -> y_assign[color=green headport="assignment_32" tailport="assignment_38"];
QueueKernel_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_38" ROWSPAN="1" COLSPAN="1">9600 : width_in_controller=32 width_in_x=32 width_in_y=32 width_out_s=32 clk=STREAM </TD></TR></TABLE>>];
QueueKernel_assign -> QueueKernel[color=gray];
cpu_to_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : cpu_to_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cpu_to_lmem" ROWSPAN="1" COLSPAN="1">cpu_to_lmem<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
cpu_to_lmem_assign -> write_lmem_assign[color=green headport="assignment_2" tailport="assignment_5"];
cpu_to_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_5" ROWSPAN="1" COLSPAN="1">12800 : width=128 clk=STREAM </TD></TR></TABLE>>];
cpu_to_lmem_assign -> cpu_to_lmem[color=gray];
lmem_to_cpu[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="lmem_to_cpu" ROWSPAN="1" COLSPAN="1">lmem_to_cpu<BR/>clk=STREAM<BR/>width=128<BR/>PUSH 64</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_To_Host_fwd : lmem_to_cpu</TD></TR></TABLE>>];
lmem_to_cpu_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_20" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
lmem_to_cpu_assign -> lmem_to_cpu[color=gray];
addrgen_cmd_write_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_write_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_write_lmem_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_write_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_write_lmem_assign -> cmd_write_lmem_0_assign[color=green headport="assignment_8" tailport="assignment_11"];
addrgen_cmd_write_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_11" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_write_lmem_assign -> addrgen_cmd_write_lmem[color=gray];
cmd_write_lmem_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_write_lmem_0" ROWSPAN="1" COLSPAN="1">cmd_write_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_write_lmem_0</TD></TR></TABLE>>];
cmd_write_lmem_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_8" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_write_lmem_0_assign -> cmd_write_lmem_0[color=gray];
write_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="write_lmem" ROWSPAN="1" COLSPAN="1">write_lmem<BR/>clk=STREAM<BR/>width=1536<BR/>PUSH 16</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">To_Memory : write_lmem</TD></TR></TABLE>>];
write_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_2" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
write_lmem_assign -> write_lmem[color=gray];
addrgen_cmd_read_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_read_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_read_lmem_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_read_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_read_lmem_assign -> cmd_read_lmem_0_assign[color=green headport="assignment_14" tailport="assignment_17"];
addrgen_cmd_read_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_17" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_read_lmem_assign -> addrgen_cmd_read_lmem[color=gray];
cmd_read_lmem_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_read_lmem_0" ROWSPAN="1" COLSPAN="1">cmd_read_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_read_lmem_0</TD></TR></TABLE>>];
cmd_read_lmem_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_14" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_read_lmem_0_assign -> cmd_read_lmem_0[color=gray];
read_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : read_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="read_lmem" ROWSPAN="1" COLSPAN="1">read_lmem<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
read_lmem_assign -> lmem_to_cpu_assign[color=green headport="assignment_20" tailport="assignment_23"];
read_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_23" ROWSPAN="1" COLSPAN="1">153600 : width=1536 clk=STREAM </TD></TR></TABLE>>];
read_lmem_assign -> read_lmem[color=gray];
controller[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : controller</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="controller" ROWSPAN="1" COLSPAN="1">controller<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
controller_assign -> QueueKernel_assign[color=green headport="assignment_38" tailport="assignment_41"];
controller_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_41" ROWSPAN="1" COLSPAN="1">22400 : width=128 clk=STREAM </TD></TR></TABLE>>];
controller_assign -> controller[color=gray];
addrgen_cmd_x[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_x</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_x_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_x_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_x_assign -> cmd_x_0_assign[color=green headport="assignment_44" tailport="assignment_47"];
addrgen_cmd_x_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_47" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_x_assign -> addrgen_cmd_x[color=gray];
cmd_x_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_x_0" ROWSPAN="1" COLSPAN="1">cmd_x_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_x_0</TD></TR></TABLE>>];
cmd_x_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_44" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_x_0_assign -> cmd_x_0[color=gray];
x[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : x</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="x" ROWSPAN="1" COLSPAN="1">x<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
x_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_29" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
x_assign -> x[color=gray];
y[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : y</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="y" ROWSPAN="1" COLSPAN="1">y<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
y_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_32" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
y_assign -> y[color=gray];
s[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="s" ROWSPAN="1" COLSPAN="1">s<BR/>clk=STREAM<BR/>width=128<BR/>PUSH 64</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_To_Host_fwd : s</TD></TR></TABLE>>];
s_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_26" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
s_assign -> s[color=gray];
cpu_to_lmem -> write_lmem [headport="write_lmem" tailport="cpu_to_lmem" label="{D{data:1}}"]
addrgen_cmd_write_lmem -> cmd_write_lmem_0 [headport="cmd_write_lmem_0" tailport="addrgen_cmd_write_lmem_0" label="{D{data:1}}"]
addrgen_cmd_read_lmem -> cmd_read_lmem_0 [headport="cmd_read_lmem_0" tailport="addrgen_cmd_read_lmem_0" label="{D{data:1}}"]
read_lmem -> lmem_to_cpu [headport="lmem_to_cpu" tailport="read_lmem" label="{D{data:1}}"]
controller -> QueueKernel [headport="controller" tailport="controller" label="{D{data:1}}"]
addrgen_cmd_x -> cmd_x_0 [headport="cmd_x_0" tailport="addrgen_cmd_x_0" label="{D{data:1}}"]
x -> QueueKernel [headport="x" tailport="x" label="{D{data:1}}"]
y -> QueueKernel [headport="y" tailport="y" label="{D{data:1}}"]
QueueKernel -> s [headport="s" tailport="s" label="{D{data:1}}"]
cmd_write_lmem_0 -> write_lmem [color=blue style=dotted]
cmd_read_lmem_0 -> read_lmem [color=blue style=dotted]
cmd_x_0 -> x [color=blue style=dotted]
}
