digraph manager_compiler_graph {
linearKernel[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="controller" ROWSPAN="1" COLSPAN="1">controller<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="p" ROWSPAN="1" COLSPAN="1">p<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="pp" ROWSPAN="1" COLSPAN="1">pp<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="dvv" ROWSPAN="1" COLSPAN="1">dvv<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="source_container" ROWSPAN="1" COLSPAN="1">source_container<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="px" ROWSPAN="1" COLSPAN="1">px<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="py" ROWSPAN="1" COLSPAN="1">py<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Kernel : linearKernel</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="ppresult" ROWSPAN="1" COLSPAN="1">ppresult<BR/>clk=STREAM<BR/>width=32<BR/>PUSH 5</TD></TR></TABLE></TD></TR></TABLE>>];
linearKernel_assign -> ppresult_assign[color=green headport="assignment_26" tailport="assignment_54"];
linearKernel_assign -> p_assign[color=green headport="assignment_29" tailport="assignment_54"];
linearKernel_assign -> pp_assign[color=green headport="assignment_32" tailport="assignment_54"];
linearKernel_assign -> dvv_assign[color=green headport="assignment_35" tailport="assignment_54"];
linearKernel_assign -> source_container_assign[color=green headport="assignment_38" tailport="assignment_54"];
linearKernel_assign -> px_assign[color=green headport="assignment_41" tailport="assignment_54"];
linearKernel_assign -> py_assign[color=green headport="assignment_44" tailport="assignment_54"];
linearKernel_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_54" ROWSPAN="1" COLSPAN="1">22400 : width_in_controller=32 width_in_p=32 width_in_pp=32 width_in_dvv=32 width_in_source_container=32 width_in_px=32 width_in_py=32 width_out_ppresult=32 clk=STREAM </TD></TR></TABLE>>];
linearKernel_assign -> linearKernel[color=gray];
cpu_to_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : cpu_to_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cpu_to_lmem" ROWSPAN="1" COLSPAN="1">cpu_to_lmem<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
cpu_to_lmem_assign -> write_lmem_assign[color=green headport="assignment_2" tailport="assignment_5"];
cpu_to_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_5" ROWSPAN="1" COLSPAN="1">12800 : width=128 clk=STREAM </TD></TR></TABLE>>];
cpu_to_lmem_assign -> cpu_to_lmem[color=gray];
lmem_to_cpu[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="lmem_to_cpu" ROWSPAN="1" COLSPAN="1">lmem_to_cpu<BR/>clk=STREAM<BR/>width=128<BR/>PUSH 64</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_To_Host_fwd : lmem_to_cpu</TD></TR></TABLE>>];
lmem_to_cpu_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_20" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
lmem_to_cpu_assign -> lmem_to_cpu[color=gray];
addrgen_cmd_write_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_write_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_write_lmem_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_write_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_write_lmem_assign -> cmd_write_lmem_0_assign[color=green headport="assignment_8" tailport="assignment_11"];
addrgen_cmd_write_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_11" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_write_lmem_assign -> addrgen_cmd_write_lmem[color=gray];
cmd_write_lmem_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_write_lmem_0" ROWSPAN="1" COLSPAN="1">cmd_write_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_write_lmem_0</TD></TR></TABLE>>];
cmd_write_lmem_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_8" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_write_lmem_0_assign -> cmd_write_lmem_0[color=gray];
write_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="write_lmem" ROWSPAN="1" COLSPAN="1">write_lmem<BR/>clk=STREAM<BR/>width=1536<BR/>PUSH 16</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">To_Memory : write_lmem</TD></TR></TABLE>>];
write_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_2" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
write_lmem_assign -> write_lmem[color=gray];
addrgen_cmd_read_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_read_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_read_lmem_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_read_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_read_lmem_assign -> cmd_read_lmem_0_assign[color=green headport="assignment_14" tailport="assignment_17"];
addrgen_cmd_read_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_17" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_read_lmem_assign -> addrgen_cmd_read_lmem[color=gray];
cmd_read_lmem_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_read_lmem_0" ROWSPAN="1" COLSPAN="1">cmd_read_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_read_lmem_0</TD></TR></TABLE>>];
cmd_read_lmem_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_14" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_read_lmem_0_assign -> cmd_read_lmem_0[color=gray];
read_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : read_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="read_lmem" ROWSPAN="1" COLSPAN="1">read_lmem<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
read_lmem_assign -> lmem_to_cpu_assign[color=green headport="assignment_20" tailport="assignment_23"];
read_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_23" ROWSPAN="1" COLSPAN="1">153600 : width=1536 clk=STREAM </TD></TR></TABLE>>];
read_lmem_assign -> read_lmem[color=gray];
controller[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : controller</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="controller" ROWSPAN="1" COLSPAN="1">controller<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
controller_assign -> linearKernel_assign[color=green headport="assignment_54" tailport="assignment_57"];
controller_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_57" ROWSPAN="1" COLSPAN="1">35200 : width=128 clk=STREAM </TD></TR></TABLE>>];
controller_assign -> controller[color=gray];
addrgen_cmd_dvv[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_dvv</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_dvv_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_dvv_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_dvv_assign -> cmd_dvv_0_assign[color=green headport="assignment_60" tailport="assignment_63"];
addrgen_cmd_dvv_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_63" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_dvv_assign -> addrgen_cmd_dvv[color=gray];
cmd_dvv_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_dvv_0" ROWSPAN="1" COLSPAN="1">cmd_dvv_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_dvv_0</TD></TR></TABLE>>];
cmd_dvv_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_60" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_dvv_0_assign -> cmd_dvv_0[color=gray];
dvv[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : dvv</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="dvv" ROWSPAN="1" COLSPAN="1">dvv<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
dvv_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_35" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
dvv_assign -> dvv[color=gray];
addrgen_cmd_p[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_p</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_p_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_p_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_p_assign -> cmd_p_0_assign[color=green headport="assignment_66" tailport="assignment_69"];
addrgen_cmd_p_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_69" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_p_assign -> addrgen_cmd_p[color=gray];
cmd_p_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_p_0" ROWSPAN="1" COLSPAN="1">cmd_p_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_p_0</TD></TR></TABLE>>];
cmd_p_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_66" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_p_0_assign -> cmd_p_0[color=gray];
p[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : p</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="p" ROWSPAN="1" COLSPAN="1">p<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
p_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_29" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
p_assign -> p[color=gray];
addrgen_cmd_pp[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_pp</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_pp_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_pp_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_pp_assign -> cmd_pp_0_assign[color=green headport="assignment_72" tailport="assignment_75"];
addrgen_cmd_pp_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_75" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_pp_assign -> addrgen_cmd_pp[color=gray];
cmd_pp_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_pp_0" ROWSPAN="1" COLSPAN="1">cmd_pp_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_pp_0</TD></TR></TABLE>>];
cmd_pp_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_72" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_pp_0_assign -> cmd_pp_0[color=gray];
pp[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : pp</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="pp" ROWSPAN="1" COLSPAN="1">pp<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
pp_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_32" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
pp_assign -> pp[color=gray];
addrgen_cmd_px[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_px</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_px_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_px_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_px_assign -> cmd_px_0_assign[color=green headport="assignment_78" tailport="assignment_81"];
addrgen_cmd_px_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_81" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_px_assign -> addrgen_cmd_px[color=gray];
cmd_px_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_px_0" ROWSPAN="1" COLSPAN="1">cmd_px_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_px_0</TD></TR></TABLE>>];
cmd_px_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_78" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_px_0_assign -> cmd_px_0[color=gray];
px[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : px</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="px" ROWSPAN="1" COLSPAN="1">px<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
px_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_41" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
px_assign -> px[color=gray];
addrgen_cmd_py[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_py</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_py_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_py_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_py_assign -> cmd_py_0_assign[color=green headport="assignment_84" tailport="assignment_87"];
addrgen_cmd_py_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_87" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_py_assign -> addrgen_cmd_py[color=gray];
cmd_py_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_py_0" ROWSPAN="1" COLSPAN="1">cmd_py_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_py_0</TD></TR></TABLE>>];
cmd_py_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_84" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_py_0_assign -> cmd_py_0[color=gray];
py[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : py</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="py" ROWSPAN="1" COLSPAN="1">py<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
py_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_44" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
py_assign -> py[color=gray];
addrgen_cmd_source_container[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_source_container</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_source_container_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_source_container_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_source_container_assign -> cmd_source_container_0_assign[color=green headport="assignment_90" tailport="assignment_93"];
addrgen_cmd_source_container_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_93" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_source_container_assign -> addrgen_cmd_source_container[color=gray];
cmd_source_container_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_source_container_0" ROWSPAN="1" COLSPAN="1">cmd_source_container_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_source_container_0</TD></TR></TABLE>>];
cmd_source_container_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_90" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_source_container_0_assign -> cmd_source_container_0[color=gray];
source_container[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : source_container</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="source_container" ROWSPAN="1" COLSPAN="1">source_container<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
source_container_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_38" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
source_container_assign -> source_container[color=gray];
ppresult[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="ppresult" ROWSPAN="1" COLSPAN="1">ppresult<BR/>clk=STREAM<BR/>width=128<BR/>PUSH 64</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_To_Host_fwd : ppresult</TD></TR></TABLE>>];
ppresult_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_26" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
ppresult_assign -> ppresult[color=gray];
cpu_to_lmem -> write_lmem [headport="write_lmem" tailport="cpu_to_lmem" label="{D{data:1}}"]
addrgen_cmd_write_lmem -> cmd_write_lmem_0 [headport="cmd_write_lmem_0" tailport="addrgen_cmd_write_lmem_0" label="{D{data:1}}"]
addrgen_cmd_read_lmem -> cmd_read_lmem_0 [headport="cmd_read_lmem_0" tailport="addrgen_cmd_read_lmem_0" label="{D{data:1}}"]
read_lmem -> lmem_to_cpu [headport="lmem_to_cpu" tailport="read_lmem" label="{D{data:1}}"]
controller -> linearKernel [headport="controller" tailport="controller" label="{D{data:1}}"]
addrgen_cmd_dvv -> cmd_dvv_0 [headport="cmd_dvv_0" tailport="addrgen_cmd_dvv_0" label="{D{data:1}}"]
dvv -> linearKernel [headport="dvv" tailport="dvv" label="{D{data:1}}"]
addrgen_cmd_p -> cmd_p_0 [headport="cmd_p_0" tailport="addrgen_cmd_p_0" label="{D{data:1}}"]
p -> linearKernel [headport="p" tailport="p" label="{D{data:1}}"]
addrgen_cmd_pp -> cmd_pp_0 [headport="cmd_pp_0" tailport="addrgen_cmd_pp_0" label="{D{data:1}}"]
pp -> linearKernel [headport="pp" tailport="pp" label="{D{data:1}}"]
addrgen_cmd_px -> cmd_px_0 [headport="cmd_px_0" tailport="addrgen_cmd_px_0" label="{D{data:1}}"]
px -> linearKernel [headport="px" tailport="px" label="{D{data:1}}"]
addrgen_cmd_py -> cmd_py_0 [headport="cmd_py_0" tailport="addrgen_cmd_py_0" label="{D{data:1}}"]
py -> linearKernel [headport="py" tailport="py" label="{D{data:1}}"]
addrgen_cmd_source_container -> cmd_source_container_0 [headport="cmd_source_container_0" tailport="addrgen_cmd_source_container_0" label="{D{data:1}}"]
source_container -> linearKernel [headport="source_container" tailport="source_container" label="{D{data:1}}"]
linearKernel -> ppresult [headport="ppresult" tailport="ppresult" label="{D{data:1}}"]
cmd_write_lmem_0 -> write_lmem [color=blue style=dotted]
cmd_read_lmem_0 -> read_lmem [color=blue style=dotted]
cmd_dvv_0 -> dvv [color=blue style=dotted]
cmd_p_0 -> p [color=blue style=dotted]
cmd_pp_0 -> pp [color=blue style=dotted]
cmd_px_0 -> px [color=blue style=dotted]
cmd_py_0 -> py [color=blue style=dotted]
cmd_source_container_0 -> source_container [color=blue style=dotted]
}
