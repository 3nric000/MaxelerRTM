digraph manager_compiler_graph {
cpu_mainKernel[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="p" ROWSPAN="1" COLSPAN="1">p<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="pp_value" ROWSPAN="1" COLSPAN="1">pp_value<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="dvv_value" ROWSPAN="1" COLSPAN="1">dvv_value<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD><TD BGCOLOR="white" BORDER="1" PORT="source_container_value" ROWSPAN="1" COLSPAN="1">source_container_value<BR/>clk=STREAM<BR/>width=32<BR/>PULL el=1 ael=2</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Kernel : cpu_mainKernel</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="pp" ROWSPAN="1" COLSPAN="1">pp<BR/>clk=STREAM<BR/>width=32<BR/>PUSH 5</TD></TR></TABLE></TD></TR></TABLE>>];
cpu_mainKernel_assign -> pp_assign[color=green headport="assignment_26" tailport="assignment_42"];
cpu_mainKernel_assign -> p_assign[color=green headport="assignment_29" tailport="assignment_42"];
cpu_mainKernel_assign -> pp_value_assign[color=green headport="assignment_32" tailport="assignment_42"];
cpu_mainKernel_assign -> source_container_value_assign[color=green headport="assignment_35" tailport="assignment_42"];
cpu_mainKernel_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_42" ROWSPAN="1" COLSPAN="1">12800 : width_in_p=32 width_in_pp_value=32 width_in_dvv_value=32 width_in_source_container_value=32 width_out_pp=32 clk=STREAM </TD></TR></TABLE>>];
cpu_mainKernel_assign -> cpu_mainKernel[color=gray];
cpu_to_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : cpu_to_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cpu_to_lmem" ROWSPAN="1" COLSPAN="1">cpu_to_lmem<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
cpu_to_lmem_assign -> write_lmem_assign[color=green headport="assignment_2" tailport="assignment_5"];
cpu_to_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_5" ROWSPAN="1" COLSPAN="1">12800 : width=128 clk=STREAM </TD></TR></TABLE>>];
cpu_to_lmem_assign -> cpu_to_lmem[color=gray];
lmem_to_cpu[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="lmem_to_cpu" ROWSPAN="1" COLSPAN="1">lmem_to_cpu<BR/>clk=STREAM<BR/>width=128<BR/>PUSH 64</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_To_Host_fwd : lmem_to_cpu</TD></TR></TABLE>>];
lmem_to_cpu_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_20" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
lmem_to_cpu_assign -> lmem_to_cpu[color=gray];
addrgen_cmd_write_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_write_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_write_lmem_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_write_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_write_lmem_assign -> cmd_write_lmem_0_assign[color=green headport="assignment_8" tailport="assignment_11"];
addrgen_cmd_write_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_11" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_write_lmem_assign -> addrgen_cmd_write_lmem[color=gray];
cmd_write_lmem_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_write_lmem_0" ROWSPAN="1" COLSPAN="1">cmd_write_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_write_lmem_0</TD></TR></TABLE>>];
cmd_write_lmem_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_8" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_write_lmem_0_assign -> cmd_write_lmem_0[color=gray];
write_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="write_lmem" ROWSPAN="1" COLSPAN="1">write_lmem<BR/>clk=STREAM<BR/>width=1536<BR/>PUSH 16</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">To_Memory : write_lmem</TD></TR></TABLE>>];
write_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_2" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
write_lmem_assign -> write_lmem[color=gray];
addrgen_cmd_read_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_read_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_read_lmem_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_read_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_read_lmem_assign -> cmd_read_lmem_0_assign[color=green headport="assignment_14" tailport="assignment_17"];
addrgen_cmd_read_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_17" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_read_lmem_assign -> addrgen_cmd_read_lmem[color=gray];
cmd_read_lmem_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_read_lmem_0" ROWSPAN="1" COLSPAN="1">cmd_read_lmem_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_read_lmem_0</TD></TR></TABLE>>];
cmd_read_lmem_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_14" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_read_lmem_0_assign -> cmd_read_lmem_0[color=gray];
read_lmem[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : read_lmem</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="read_lmem" ROWSPAN="1" COLSPAN="1">read_lmem<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
read_lmem_assign -> lmem_to_cpu_assign[color=green headport="assignment_20" tailport="assignment_23"];
read_lmem_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_23" ROWSPAN="1" COLSPAN="1">153600 : width=1536 clk=STREAM </TD></TR></TABLE>>];
read_lmem_assign -> read_lmem[color=gray];
dvv_value[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : dvv_value</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="dvv_value" ROWSPAN="1" COLSPAN="1">dvv_value<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
dvv_value_assign -> cpu_mainKernel_assign[color=green headport="assignment_42" tailport="assignment_45"];
dvv_value_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_45" ROWSPAN="1" COLSPAN="1">25600 : width=128 clk=STREAM </TD></TR></TABLE>>];
dvv_value_assign -> dvv_value[color=gray];
addrgen_cmd_p[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_p</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_p_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_p_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_p_assign -> cmd_p_0_assign[color=green headport="assignment_48" tailport="assignment_51"];
addrgen_cmd_p_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_51" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_p_assign -> addrgen_cmd_p[color=gray];
cmd_p_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_p_0" ROWSPAN="1" COLSPAN="1">cmd_p_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_p_0</TD></TR></TABLE>>];
cmd_p_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_48" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_p_0_assign -> cmd_p_0[color=gray];
p[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">From_Memory : p</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="p" ROWSPAN="1" COLSPAN="1">p<BR/>clk=STREAM<BR/>width=1536<BR/>PULL el=1 ael=16</TD></TR></TABLE></TD></TR></TABLE>>];
p_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_29" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
p_assign -> p[color=gray];
pp_value[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : pp_value</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="pp_value" ROWSPAN="1" COLSPAN="1">pp_value<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
pp_value_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_32" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
pp_value_assign -> pp_value[color=gray];
source_container_value[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">PCIe_From_Host_fwd : source_container_value</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="source_container_value" ROWSPAN="1" COLSPAN="1">source_container_value<BR/>clk=STREAM<BR/>width=128<BR/>PULL el=1 ael=8</TD></TR></TABLE></TD></TR></TABLE>>];
source_container_value_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_35" ROWSPAN="1" COLSPAN="1">0 : width=128 clk=STREAM </TD></TR></TABLE>>];
source_container_value_assign -> source_container_value[color=gray];
addrgen_cmd_pp[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">AddrGen : addrgen_cmd_pp</TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="outputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="addrgen_cmd_pp_0" ROWSPAN="1" COLSPAN="1">addrgen_cmd_pp_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 1</TD></TR></TABLE></TD></TR></TABLE>>];
addrgen_cmd_pp_assign -> cmd_pp_0_assign[color=green headport="assignment_54" tailport="assignment_57"];
addrgen_cmd_pp_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_57" ROWSPAN="1" COLSPAN="1">0 : width=64 clock=STREAM </TD></TR></TABLE>>];
addrgen_cmd_pp_assign -> addrgen_cmd_pp[color=gray];
cmd_pp_0[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="cmd_pp_0" ROWSPAN="1" COLSPAN="1">cmd_pp_0<BR/>clk=STREAM<BR/>width=64<BR/>PUSH 8</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">Memory_Cmd : cmd_pp_0</TD></TR></TABLE>>];
cmd_pp_0_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_54" ROWSPAN="1" COLSPAN="1">0 : width=64 clk=STREAM </TD></TR></TABLE>>];
cmd_pp_0_assign -> cmd_pp_0[color=gray];
pp[shape=plaintext, label=<<TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="1"><TR><TD BGCOLOR="white" BORDER="0" PORT="inputs" ROWSPAN="1" COLSPAN="1"><TABLE  BORDER="1" CELLPADDING="1" CELLSPACING="4"><TR><TD BGCOLOR="white" BORDER="1" PORT="pp" ROWSPAN="1" COLSPAN="1">pp<BR/>clk=STREAM<BR/>width=1536<BR/>PUSH 16</TD></TR></TABLE></TD></TR><TR><TD BGCOLOR="white" BORDER="0" PORT="node_info" ROWSPAN="1" COLSPAN="1">To_Memory : pp</TD></TR></TABLE>>];
pp_assign[shape=plaintext, label=<<TABLE  BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR><TD BGCOLOR="green" BORDER="1" PORT="assignment_26" ROWSPAN="1" COLSPAN="1">0 : width=1536 clk=STREAM </TD></TR></TABLE>>];
pp_assign -> pp[color=gray];
cpu_to_lmem -> write_lmem [headport="write_lmem" tailport="cpu_to_lmem" label="{D{data:1}}"]
addrgen_cmd_write_lmem -> cmd_write_lmem_0 [headport="cmd_write_lmem_0" tailport="addrgen_cmd_write_lmem_0" label="{D{data:1}}"]
addrgen_cmd_read_lmem -> cmd_read_lmem_0 [headport="cmd_read_lmem_0" tailport="addrgen_cmd_read_lmem_0" label="{D{data:1}}"]
read_lmem -> lmem_to_cpu [headport="lmem_to_cpu" tailport="read_lmem" label="{D{data:1}}"]
dvv_value -> cpu_mainKernel [headport="dvv_value" tailport="dvv_value" label="{D{data:1}}"]
addrgen_cmd_p -> cmd_p_0 [headport="cmd_p_0" tailport="addrgen_cmd_p_0" label="{D{data:1}}"]
p -> cpu_mainKernel [headport="p" tailport="p" label="{D{data:1}}"]
pp_value -> cpu_mainKernel [headport="pp_value" tailport="pp_value" label="{D{data:1}}"]
source_container_value -> cpu_mainKernel [headport="source_container_value" tailport="source_container_value" label="{D{data:1}}"]
cpu_mainKernel -> pp [headport="pp" tailport="pp" label="{D{data:1}}"]
addrgen_cmd_pp -> cmd_pp_0 [headport="cmd_pp_0" tailport="addrgen_cmd_pp_0" label="{D{data:1}}"]
cmd_write_lmem_0 -> write_lmem [color=blue style=dotted]
cmd_read_lmem_0 -> read_lmem [color=blue style=dotted]
cmd_p_0 -> p [color=blue style=dotted]
cmd_pp_0 -> pp [color=blue style=dotted]
}
