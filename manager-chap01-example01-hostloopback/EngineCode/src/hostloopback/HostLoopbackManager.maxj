/**
 * Document: Manager Compiler Tutorial (maxcompiler-manager-tutorial.pdf)
 * Chapter: 1      Example: 1      Name: Host loopback
 * MaxFile name: HostLoopback
 * Summary:
 *     Stream data from the host to the kernel and back to the host again.
 */

package hostloopback;

import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.managers.custom.CustomManager;
import com.maxeler.maxcompiler.v2.managers.custom.DFELink;
import com.maxeler.maxcompiler.v2.managers.custom.blocks.KernelBlock;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.CPUTypes;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.EngineInterface;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.InterfaceParam;

class HostLoopbackManager extends CustomManager {

	HostLoopbackManager(EngineParameters engineParameters) {
		super(engineParameters);

		KernelBlock k = addKernel(
			new HostLoopbackKernel(makeKernelParameters("HostLoopbackKernel")));

		DFELink x = addStreamFromCPU("x");

		k.getInput("x") <== x;

		DFELink y = addStreamToCPU("y");
		y <== k.getOutput("y");
	}

	static EngineInterface interfaceDefault() {
		EngineInterface ei = new EngineInterface();
		InterfaceParam size = ei.addParam("dataSize", CPUTypes.INT32);
		ei.setTicks("HostLoopbackKernel", size);
		ei.setStream("x", CPUTypes.UINT32, size * CPUTypes.UINT32.sizeInBytes());
		ei.setStream("y", CPUTypes.UINT32, size * CPUTypes.UINT32.sizeInBytes());
		return ei;
	}

	public static void main(String[] args) {
		EngineParameters params = new EngineParameters(args);
		HostLoopbackManager manager = new HostLoopbackManager(params);
		manager.createSLiCinterface(interfaceDefault());
		manager.build();
	}
}

