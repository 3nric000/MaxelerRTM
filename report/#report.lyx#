#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Abstract
\end_layout

\begin_layout Standard
The objective of this project is to accelerate in hardware the RTM application
 using the Maxeler platform.
 First of all, it was necessary to analyze the C code to find out the critical
 parts.
 This analysis was done both by looking at the C code and by using profiling
 tools (part 3).
 Meanwhile, we started to study how the Maxeler platform works by reading
 the manuals and looking at the examples inside Maxide.
 Then, we decided which function was the best candidate to be implement
 in hardware.
 During the implementation, we followed several approaches (part 4), from
 trivial to more complex ones.
 In the end, only with the last approach we were able to sythentize the
 kernel on the FPGA board and examine the result of hardware acceleration.
\end_layout

\begin_layout Section
RTM
\end_layout

\begin_layout Section
Profiling
\end_layout

\begin_layout Section
Approaches
\end_layout

\begin_layout Subsection*
Quite Trivial
\end_layout

\begin_layout Standard
codice C 1:1
\end_layout

\begin_layout Standard
passare ogni volta la croce
\end_layout

\begin_layout Subsection*
LMEM Blocked 3D
\end_layout

\begin_layout Subsection*
Stalling Streams
\end_layout

\begin_layout Standard
circular queue
\end_layout

\begin_layout Standard
our approach
\end_layout

\begin_layout Section
Final Notes
\end_layout

\end_body
\end_document
