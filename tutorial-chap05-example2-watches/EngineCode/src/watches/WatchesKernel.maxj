/**
 * Document: MaxCompiler Tutorial (maxcompiler-tutorial.pdf)
 * Chapter: 5      Example: 2      Name: Watches
 * MaxFile name: Watches
 * Summary:
 *        Kernel that computes a three point moving average with boundaries,
 *   while printing watch information.
 */
package watches;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;

class WatchesKernel extends Kernel {

	WatchesKernel(KernelParameters parameters) {
		super(parameters);

		// Input
		DFEVar n = io.scalarInput("n", dfeUInt(32));
		DFEVar x = io.input("x", dfeFloat(8, 24));
		x.watch("x");

		// Data
		DFEVar prevOriginal = stream.offset(x, -1);
		prevOriginal.watch("prevOriginal");
		DFEVar nextOriginal = stream.offset(x, 1);

		// Control
		DFEVar count = control.count.simpleCounter(32, n);
		count.watch("cnt");
		DFEVar aboveLowerBound = count > 0;
		DFEVar belowUpperBound = count < n - 1;
		DFEVar withinBounds = aboveLowerBound & belowUpperBound;
		aboveLowerBound.watch("aboveLowerBound");

		DFEVar prev = aboveLowerBound ? prevOriginal : 0;
		prev.watch("prev");
		DFEVar next = belowUpperBound ? nextOriginal : 0;

		DFEVar divisor = withinBounds ? constant.var(dfeFloat(8, 24), 3) : 2;

		DFEVar result = (prev + x + next) / divisor;
		result.watch("result");

		// Output
		io.output("y", result, dfeFloat(8, 24));
	}

}